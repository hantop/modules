<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="XWPlanMapper">
    <update id="fillCreditIdByTenderId" parameterType="java.util.Map" >
        UPDATE flb.t_user_plan_product SET product_id = #{creditId},update_time=now() WHERE tender_id = #{tenderId}
    </update>

    <select id="getUserPlanCreditByCreditId" parameterType="java.lang.Integer" resultType="com.fenlibao.p2p.model.xinwang.entity.plan.SysUserPlanCredit">
        select id,user_plan_id userPlanId,tender_id tenderId,product_id creditId,amount,return_amount returnAmount
        from flb.t_user_plan_product where product_id = #{creditId}
    </select>
    
    <select id="getUserPlanById" parameterType="java.lang.Integer" resultType="com.fenlibao.p2p.model.xinwang.entity.plan.SysUserPlan">
        select id,user_id userId,plan_id planId,invest_amount investAmount,case status when 1 then 'IN_POSSESSION' when 2 then 'APPLY_FOR_EXIT' when 3 then 'EXITED' when 4 then 'OVERDUE' else null end status,exit_time exitTime
        from flb.t_user_plan where id= #{id}
    </select>

    <select id="getPlanById" parameterType="java.lang.Integer" resultType="com.fenlibao.p2p.model.xinwang.entity.plan.SysPlan">
        select id,type,is_novice novice,name,description,number,amount,surplus_amount surplusAmount,cycle,cycle_type cycleType,invest_rate investRate,
        mo_increase_rate monthIncreaseRate,min_yearly_rate minYearlyRate,max_yearly_rate maxYearlyRate,raise_rate raisRate,display_time displayTime,
        release_time releaseTime,audit_time auditTime,full_time fullTime,settle_time settleTime,bearrate_date bearrateDate,expire_time expireTime,
        overdue_rate overdueRate,status,repay_mode repayMode,fund_raising_period fundRaisingPeriod,can_quit canQuit
        from flb.t_invest_plan where id= #{id} limit 1
    </select>
    
    <update id="updateUserPlanCreditReturnAmount" parameterType="java.util.Map">
        UPDATE flb.t_user_plan_product SET return_amount = return_amount + #{returnAmount},update_time=now() WHERE product_id = #{productId}
    </update>
    
    <select id="sumBidPlanData" parameterType="java.lang.Integer" resultType="com.fenlibao.p2p.model.xinwang.entity.trade.SysPlanPayeeReceivePayment">
        SELECT f.F04 payeeId,f.F05 feeType,SUM(F07) amount from (select d.F01 from (select b.bid_record_id from (SELECT id,user_id,plan_id FROM flb.t_plan_record where plan_id= #{planId}) a
        INNER JOIN flb.t_plan_bid_record b ON a.id=b.plan_record_id) c INNER JOIN s62.t6251 d ON c.bid_record_id=d.F11) e INNER JOIN s62.t6252 f ON e.F01=f.F11
        GROUP BY f.F04,f.F05;
    </select>
</mapper>