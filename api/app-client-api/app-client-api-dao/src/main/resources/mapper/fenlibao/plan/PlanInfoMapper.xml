<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PlanInfoMapper">
	<insert id="insertPlanTermination" parameterType="Map">
		INSERT INTO flb.t_plan_termination(plan_id, operater_id)
		VALUES(#{planId}, #{operatorId})
	</insert>

	<update id="updatePlanTermination" parameterType="Map">
		UPDATE flb.t_invest_plan
		SET
			expire_time = #{expireTime},
			bearrate_date = #{bearrateDate},
			full_time = #{fullTime},
			update_time = #{updateTime},
			status = #{status}
		WHERE
			id = #{id}
	</update>

	<select id="findPlanIds" parameterType="Map" resultType="Integer">
		SELECT
			`id`
		FROM
			flb.t_invest_plan
		WHERE
		(
			surplus_amount <![CDATA[<=]]> #{lessThanSurplusAmount}
			OR DATE_ADD(release_time, INTERVAL fund_raising_period HOUR)<![CDATA[<=]]> #{nowTime}
		)
		AND status = #{status}
	</select>

	<select id="getPlanInfoById" parameterType="int" resultType="com.fenlibao.p2p.model.entity.plan.InvestPlanInfo">
		SELECT id planId,name planName,type planType,status planStatus,bearrate_date bearrateTime,invest_rate investRate,cycle_type cycleType,cycle,expire_time expireTime,repay_mode repayMode,raise_rate raiseRate,min_yearly_rate minYearlyRate,max_yearly_rate maxYearlyRate, fund_raising_period fundRaisingPeriod from flb.t_invest_plan where id= #{id} limit 1
	</select>
	<select id="getUserPlansByPlanId" parameterType="int" resultType="com.fenlibao.p2p.model.entity.plan.UserPlan">
		SELECT id userPlanId,plan_id planId,user_id UserId,invest_amount investAmount,status userPlanStatus,exit_time applyQuitTime from flb.t_user_plan where plan_id= #{planId} 
	</select>
	<select id="getUserCoupon" parameterType="int" resultType="com.fenlibao.p2p.model.entity.coupons.UserCouponInfo">
	    select a.*,b.scope from (SELECT ID id,user_id userId,coupon_id couponId,activity_id activityId,tender_id investId,coupon_status status,user_plan_id userPlanId,invest_type investType  from flb.t_user_coupon where invest_type=3 and user_plan_id= #{userPlanId}) a INNER JOIN flb.t_coupon b ON a.couponId=b.id limit 1
	</select>
	<insert id="batchInsertUserPlanRepayPlan" parameterType="java.util.List">
        insert into flb.t_user_plan_repay (user_id,plan_id,user_plan_id,transaction_type,term,state,expect_amount,actual_amount,expect_repay_date,actual_repay_time)
        values
        <foreach collection="list" item="item" index="index" separator=",">
        (#{item.userId},#{item.planId},#{item.userPlanId},#{item.transactionType},#{item.term},#{item.state},#{item.expectAmount},#{item.actualAmount},#{item.expectRepayDate},#{item.actualRepayTime})
        </foreach>
    </insert>

	<resultMap id="BaseResultMap" type="com.fenlibao.p2p.model.entity.plan.InvestPlanInfo">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="type" jdbcType="INTEGER" property="type" />
		<result column="is_novice" jdbcType="INTEGER" property="isNovice" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="number" jdbcType="VARCHAR" property="number" />
		<result column="amount" jdbcType="DECIMAL" property="amount" />
		<result column="surplus_amount" jdbcType="DECIMAL" property="surplusAmount" />
		<result column="cycle" jdbcType="INTEGER" property="cycle" />
		<result column="cycle_type" jdbcType="CHAR" property="cycleType" />
		<result column="invest_rate" jdbcType="DECIMAL" property="investRate" />
		<result column="mo_increase_rate" jdbcType="DECIMAL" property="moIncreaseRate" />
		<result column="min_yearly_rate" jdbcType="DECIMAL" property="minYearlyRate" />
		<result column="max_yearly_rate" jdbcType="DECIMAL" property="maxYearlyRate" />
		<result column="raise_rate" jdbcType="DECIMAL" property="raiseRate" />
		<result column="display_time" jdbcType="TIMESTAMP" property="displayTime" />
		<result column="release_time" jdbcType="TIMESTAMP" property="releaseTime" />
		<result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
		<result column="full_time" jdbcType="TIMESTAMP" property="fullTime" />
		<result column="settle_time" jdbcType="TIMESTAMP" property="settleTime" />
		<result column="bearrate_date" jdbcType="DATE" property="bearrateDate" />
		<result column="expire_time" jdbcType="TIMESTAMP" property="expireTime" />
		<result column="overdue_rate" jdbcType="DECIMAL" property="overdueRate" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="repay_mode" jdbcType="CHAR" property="repayMode" />
		<result column="fund_raising_period" jdbcType="INTEGER" property="fundRaisingPeriod" />
		<result column="can_quit" jdbcType="INTEGER" property="canQuit" />
		<result column="sticktop_time" jdbcType="TIMESTAMP" property="sticktopTime" />
		<result column="recommend_time" jdbcType="TIMESTAMP" property="recommendTime" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="is_cg" jdbcType="TINYINT" property="isCg" />
	</resultMap>
	<sql id="Base_Column_List">
		id, type, is_novice, name, number, amount, surplus_amount, cycle, cycle_type, invest_rate,
		mo_increase_rate, min_yearly_rate, max_yearly_rate, raise_rate, display_time, release_time,
		audit_time, full_time, settle_time, bearrate_date, expire_time, overdue_rate, status,
		repay_mode, fund_raising_period, can_quit, sticktop_time, recommend_time, create_time,
		update_time, is_cg
	</sql>

	<select id="getPlanInfoNotFull" parameterType="java.util.HashMap" resultType="Integer">
		SELECT id FROM flb.t_invest_plan WHERE STATUS = 4 AND is_cg = #{isCg,jdbcType=TINYINT} AND <![CDATA[release_time <= #{releaseTime}]]>;
	</select>
</mapper>